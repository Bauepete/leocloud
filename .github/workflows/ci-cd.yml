# This workflow will build a Java project with Maven
# For more information see: https://aberger.at/blog/2021/05/29/cloud-startproject.html

name: Build Application (master)

on:
  push:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  DISTRIBUTION_FOLDER: target/distribution-0.0.1-dist/docker

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: convert github repository name to lowercase in order to get valid docker image identifiers
      run: echo "IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: "debug: display repoository name"
      run: echo ${{ env.IMAGE_REPOSITORY }}

    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - uses: actions/checkout@v2

    - name: cache maven repository
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
        key: ${{ runner.os }}-build-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-m2-

    - name: build with Maven
      run: |
        mvn -Dquarkus-profile=prod -Dbase.href="/" -B package

    - name: build docker images
      run: |
        ./build.sh build ${{ env.REGISTRY }}/${{ github.repository }}
        docker image ls
      working-directory: distribution/${{ env.DISTRIBUTION_FOLDER }}        

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: push docker images
      run: ./build.sh push ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}
      working-directory: distribution/${{ env.DISTRIBUTION_FOLDER }}    
#    - name: install ssh key
#      uses: caberger/install-ssh-key@v1.0
#      with:
#        ssh-private-key:  ${{ secrets.SSH_SERVER_PRIVATE_KEY }}
#        user: ${{ secrets.SERVER_USER }}
#        server: ${{ secrets.SERVER }}
#        alias: server
    - name: install ssh key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_SERVER_PRIVATE_KEY }}
    - name: create .ssh/known_hosts
      run: |
            ssh-keyscan -H -t rsa -v {{ secrets.SERVER }} >> ~/.ssh/known_hosts

    - name: install on server  
      working-directory: distribution
      run: |
        pwd
        ls -l
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }} "rm -rf ~/dist && mkdir -p ~/dist"
        scp install.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }}:~/dist
        scp ${{ env.DISTRIBUTION_FOLDER }}/docker-compose-production.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }}:~/dist/docker-compose.yml
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }} "chmod +x ~/dist/*.sh"
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }} "cd ~/dist && sudo ./install.sh ${{ github.actor }} ${{ secrets.REGISTRY_ACCESS_TOKEN }} ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }} ${{ secrets.SERVER_USER }}"

