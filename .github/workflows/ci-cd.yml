# This workflow will build a Java project with Maven
# For more information see: https://aberger.at/blog/2021/05/29/cloud-startproject.html

name: Build Application

on:
  push:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DISTRIBUTION_FOLDER: target/distribution-0.0.1-dist/docker

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - uses: actions/checkout@v2

    - name: cache maven repository
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
        key: ${{ runner.os }}-build-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-m2-

    - name: build with Maven
      run: |
        mvn -Dquarkus-profile=prod -Dbase.href="/" -B package



    - name: build docker images
      run: |
        echo "workingdir: distribution/${{ env.DISTRIBUTION_FOLDER }}"
        ./build.sh build ${{ env.REGISTRY }}/${{ github.repository }}
        docker image ls
      working-directory: distribution/target/distribution-0.0.1-dist/docker        
      
#    - name: Extract metadata (tags, labels) for Docker
#      id: meta
#      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#      with:
#        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: push docker images
      run: ./build.sh push ${{ env.REGISTRY }}/${{ github.repository }}
      working-directory: distribution/target/distribution-0.0.1-dist/docker
    
    - name: install ssh key
      uses: caberger/install-ssh-key@v1.0
      with:
        ssh-private-key:  ${{ secrets.SSH_SERVER_PRIVATE_KEY }}
        user: ${{ secrets.SERVER_USER }}
        server: ${{ secrets.SERVER }}
        alias: server

    - name: install on server  
      working-directory: distribution
      run: |
        chmod +x ./install.sh
        ./install.sh "${{ github.actor }}" "${{ secrets.REGISTRY_ACCESS_TOKEN }}" "${{ env.REGISTRY }}/${{ github.repository }}"

